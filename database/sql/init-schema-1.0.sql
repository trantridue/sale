-- MySQL Script generated by MySQL Workbench
-- 10/06/16 00:19:11
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema sale
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sale` ;
CREATE SCHEMA IF NOT EXISTS `sale` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `sale` ;

-- -----------------------------------------------------
-- Table `sale`.`branch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`branch` ;

CREATE TABLE IF NOT EXISTS `sale`.`branch` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `label` VARCHAR(45) NOT NULL,
  `address` VARCHAR(255) NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '<double-click to overwrite multiple objects>';

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`branch` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`role` ;

CREATE TABLE IF NOT EXISTS `sale`.`role` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `label` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '<double-click to overwrite multiple objects>';

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`role` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`user` ;

CREATE TABLE IF NOT EXISTS `sale`.`user` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NULL,
  `firstname` VARCHAR(45) NULL,
  `lastname` VARCHAR(45) NULL,
  `address` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `is_active` BIT NOT NULL DEFAULT 1,
  `birth_day` DATE NULL,
  `date` DATETIME NULL,
  `base_salary` FLOAT NULL,
  `branch_id` INT(11) NOT NULL,
  `role_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_user_branch1`
    FOREIGN KEY (`branch_id`)
    REFERENCES `sale`.`branch` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `sale`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '<double-click to overwrite multiple objects>';

CREATE INDEX `fk_user_branch1_idx` ON `sale`.`user` (`branch_id` ASC);

CREATE INDEX `fk_user_role1_idx` ON `sale`.`user` (`role_id` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`user` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`product` ;

CREATE TABLE IF NOT EXISTS `sale`.`product` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(32) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(1000) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `product_code_UNIQUE` ON `sale`.`product` (`code` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`product` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`provider`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`provider` ;

CREATE TABLE IF NOT EXISTS `sale`.`provider` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `phone` VARCHAR(16) NOT NULL,
  `address` VARCHAR(255) NULL,
  `description` VARCHAR(1000) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`provider` (`id` ASC);

CREATE UNIQUE INDEX `phone_UNIQUE` ON `sale`.`provider` (`phone` ASC);


-- -----------------------------------------------------
-- Table `sale`.`import_facture`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`import_facture` ;

CREATE TABLE IF NOT EXISTS `sale`.`import_facture` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(32) NOT NULL,
  `date` DATE NOT NULL,
  `update_date` DATETIME NOT NULL,
  `description` VARCHAR(1000) NULL,
  `user_id` INT(11) NOT NULL,
  `provider_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_import_facture_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_import_facture_provider1`
    FOREIGN KEY (`provider_id`)
    REFERENCES `sale`.`provider` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `import_facture_code_UNIQUE` ON `sale`.`import_facture` (`code` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`import_facture` (`id` ASC);

CREATE INDEX `fk_import_facture_user1_idx` ON `sale`.`import_facture` (`user_id` ASC);

CREATE INDEX `fk_import_facture_provider1_idx` ON `sale`.`import_facture` (`provider_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`import_facture_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`import_facture_product` ;

CREATE TABLE IF NOT EXISTS `sale`.`import_facture_product` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `amount` FLOAT NOT NULL,
  `quantity` INT(11) NOT NULL,
  `product_id` INT(11) NOT NULL,
  `import_facture_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_import_facture_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `sale`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_import_facture_product_import_facture1`
    FOREIGN KEY (`import_facture_id`)
    REFERENCES `sale`.`import_facture` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`import_facture_product` (`id` ASC);

CREATE INDEX `fk_import_facture_product_product1_idx` ON `sale`.`import_facture_product` (`product_id` ASC);

CREATE INDEX `fk_import_facture_product_import_facture1_idx` ON `sale`.`import_facture_product` (`import_facture_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`customer` ;

CREATE TABLE IF NOT EXISTS `sale`.`customer` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `phone` VARCHAR(16) NULL,
  `address` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `sex` BIT NOT NULL DEFAULT 0 COMMENT 'sex = 0 is WOMEN, 1 is MEN',
  `birth_day` DATE NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`customer` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`return_provider_facture`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`return_provider_facture` ;

CREATE TABLE IF NOT EXISTS `sale`.`return_provider_facture` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(32) NOT NULL,
  `date` DATE NOT NULL,
  `update_date` DATETIME NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `return_provider_facture_code_UNIQUE` ON `sale`.`return_provider_facture` (`code` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`return_provider_facture` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`return_provider_facture_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`return_provider_facture_product` ;

CREATE TABLE IF NOT EXISTS `sale`.`return_provider_facture_product` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `price` FLOAT NOT NULL,
  `quantity` INT(11) NOT NULL,
  `provider_id` INT(11) NOT NULL,
  `return_provider_facture_id` INT(11) NOT NULL,
  `product_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_return_provider_facture_product_provider1`
    FOREIGN KEY (`provider_id`)
    REFERENCES `sale`.`provider` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_return_provider_facture_product_return_provider_facture1`
    FOREIGN KEY (`return_provider_facture_id`)
    REFERENCES `sale`.`return_provider_facture` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_return_provider_facture_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `sale`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`return_provider_facture_product` (`id` ASC);

CREATE INDEX `fk_return_provider_facture_product_provider1_idx` ON `sale`.`return_provider_facture_product` (`provider_id` ASC);

CREATE INDEX `fk_return_provider_facture_product_return_provider_facture1_idx` ON `sale`.`return_provider_facture_product` (`return_provider_facture_id` ASC);

CREATE INDEX `fk_return_provider_facture_product_product1_idx` ON `sale`.`return_provider_facture_product` (`product_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`export_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`export_type` ;

CREATE TABLE IF NOT EXISTS `sale`.`export_type` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL COMMENT 'OFFLINE' /* comment truncated */ /*ONLINE
WHOLESALE
*/,
  `label` VARCHAR(45) NOT NULL COMMENT 'BÁN HÀNG TẠI ' /* comment truncated */ /*UẦY
BÁN HÀNG ONLINE
BÁN BUÔN*/,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`export_type` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`export_facture`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`export_facture` ;

CREATE TABLE IF NOT EXISTS `sale`.`export_facture` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(32) NOT NULL,
  `date` DATE NOT NULL,
  `update_date` DATETIME NOT NULL,
  `description` VARCHAR(255) NULL,
  `export_type_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  `branch_id` INT(11) NOT NULL,
  `customer_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_export_facture_export_type1`
    FOREIGN KEY (`export_type_id`)
    REFERENCES `sale`.`export_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_export_facture_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_export_facture_branch1`
    FOREIGN KEY (`branch_id`)
    REFERENCES `sale`.`branch` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_export_facture_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `sale`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `export_facture_code_UNIQUE` ON `sale`.`export_facture` (`code` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`export_facture` (`id` ASC);

CREATE INDEX `fk_export_facture_export_type1_idx` ON `sale`.`export_facture` (`export_type_id` ASC);

CREATE INDEX `fk_export_facture_user1_idx` ON `sale`.`export_facture` (`user_id` ASC);

CREATE INDEX `fk_export_facture_branch1_idx` ON `sale`.`export_facture` (`branch_id` ASC);

CREATE INDEX `fk_export_facture_customer1_idx` ON `sale`.`export_facture` (`customer_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`export_facture_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`export_facture_product` ;

CREATE TABLE IF NOT EXISTS `sale`.`export_facture_product` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `amount` FLOAT NOT NULL,
  `quantity` INT NOT NULL,
  `export_facture_id` INT(11) NOT NULL,
  `product_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_export_facture_product_export_facture1`
    FOREIGN KEY (`export_facture_id`)
    REFERENCES `sale`.`export_facture` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_export_facture_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `sale`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_export_facture_product_export_facture1_idx` ON `sale`.`export_facture_product` (`export_facture_id` ASC);

CREATE INDEX `fk_export_facture_product_product1_idx` ON `sale`.`export_facture_product` (`product_id` ASC);

CREATE UNIQUE INDEX `export_facture_id_UNIQUE` ON `sale`.`export_facture_product` (`export_facture_id` ASC);

CREATE UNIQUE INDEX `product_id_UNIQUE` ON `sale`.`export_facture_product` (`product_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`export_product_return`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`export_product_return` ;

CREATE TABLE IF NOT EXISTS `sale`.`export_product_return` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `product_id` INT(11) NOT NULL,
  `quantity` INT NOT NULL,
  `price` FLOAT NOT NULL,
  `old_export_facture_id` INT(11) NOT NULL,
  `export_facture_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customer_return_product_export_facture1`
    FOREIGN KEY (`old_export_facture_id`)
    REFERENCES `sale`.`export_facture` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_return_product_export_facture2`
    FOREIGN KEY (`export_facture_id`)
    REFERENCES `sale`.`export_facture` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`export_product_return` (`id` ASC);

CREATE INDEX `fk_customer_return_product_export_facture1_idx` ON `sale`.`export_product_return` (`old_export_facture_id` ASC);

CREATE INDEX `fk_customer_return_product_export_facture2_idx` ON `sale`.`export_product_return` (`export_facture_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`fund`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`fund` ;

CREATE TABLE IF NOT EXISTS `sale`.`fund` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`fund` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`user_payment_fund`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`user_payment_fund` ;

CREATE TABLE IF NOT EXISTS `sale`.`user_payment_fund` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `amount` FLOAT NULL,
  `fund_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_user_payment_fund_fund1`
    FOREIGN KEY (`fund_id`)
    REFERENCES `sale`.`fund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`user_payment_fund` (`id` ASC);

CREATE INDEX `fk_user_payment_fund_fund1_idx` ON `sale`.`user_payment_fund` (`fund_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`user_payment_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`user_payment_history` ;

CREATE TABLE IF NOT EXISTS `sale`.`user_payment_history` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `bonus` FLOAT NOT NULL DEFAULT 0,
  `next_pay_date` DATE NOT NULL,
  `date` DATETIME NOT NULL,
  `update_date` VARCHAR(45) NULL,
  `description` VARCHAR(1000) NOT NULL,
  `user_payment_fund_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  `for_user_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_user_payment_history_user_payment_fund1`
    FOREIGN KEY (`user_payment_fund_id`)
    REFERENCES `sale`.`user_payment_fund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_payment_history_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_payment_history_user2`
    FOREIGN KEY (`for_user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`user_payment_history` (`id` ASC);

CREATE INDEX `fk_user_payment_history_user_payment_fund1_idx` ON `sale`.`user_payment_history` (`user_payment_fund_id` ASC);

CREATE INDEX `fk_user_payment_history_user1_idx` ON `sale`.`user_payment_history` (`user_id` ASC);

CREATE INDEX `fk_user_payment_history_user2_idx` ON `sale`.`user_payment_history` (`for_user_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`provider_payment_fund`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`provider_payment_fund` ;

CREATE TABLE IF NOT EXISTS `sale`.`provider_payment_fund` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `fund_id` INT(11) NOT NULL,
  `amount` FLOAT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_provider_payment_fund_fund`
    FOREIGN KEY (`fund_id`)
    REFERENCES `sale`.`fund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`provider_payment_fund` (`id` ASC);

CREATE INDEX `fk_provider_payment_fund_fund_idx` ON `sale`.`provider_payment_fund` (`fund_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`provider_payment_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`provider_payment_history` ;

CREATE TABLE IF NOT EXISTS `sale`.`provider_payment_history` (
  `id` INT(11) NOT NULL,
  `date` DATE NOT NULL,
  `update_date` DATETIME NOT NULL,
  `description` VARCHAR(1000) NOT NULL,
  `provider_payment_fund_id` INT(11) NOT NULL,
  `provider_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_provider_payment_history_provider_payment_fund1`
    FOREIGN KEY (`provider_payment_fund_id`)
    REFERENCES `sale`.`provider_payment_fund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_provider_payment_history_provider1`
    FOREIGN KEY (`provider_id`)
    REFERENCES `sale`.`provider` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_provider_payment_history_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`provider_payment_history` (`id` ASC);

CREATE INDEX `fk_provider_payment_history_provider_payment_fund1_idx` ON `sale`.`provider_payment_history` (`provider_payment_fund_id` ASC);

CREATE INDEX `fk_provider_payment_history_provider1_idx` ON `sale`.`provider_payment_history` (`provider_id` ASC);

CREATE INDEX `fk_provider_payment_history_user1_idx` ON `sale`.`provider_payment_history` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`user_base_salary_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`user_base_salary_history` ;

CREATE TABLE IF NOT EXISTS `sale`.`user_base_salary_history` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `end_date` DATE NOT NULL,
  `date` DATETIME NOT NULL,
  `amount` FLOAT NOT NULL,
  `description` VARCHAR(45) NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_user_base_salary_history_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`user_base_salary_history` (`id` ASC);

CREATE INDEX `fk_user_base_salary_history_user1_idx` ON `sale`.`user_base_salary_history` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`product_branch_exchage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`product_branch_exchage` ;

CREATE TABLE IF NOT EXISTS `sale`.`product_branch_exchage` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `quantity` INT NOT NULL,
  `date` DATE NOT NULL,
  `update_date` DATETIME NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sale`.`fund_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`fund_history` ;

CREATE TABLE IF NOT EXISTS `sale`.`fund_history` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `amount` FLOAT NOT NULL,
  `date` DATE NOT NULL,
  `update_date` DATETIME NOT NULL,
  `description` VARCHAR(255) NULL,
  `fund_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_fund_history_fund1`
    FOREIGN KEY (`fund_id`)
    REFERENCES `sale`.`fund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fund_history_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`fund_history` (`id` ASC);

CREATE INDEX `fk_fund_history_fund1_idx` ON `sale`.`fund_history` (`fund_id` ASC);

CREATE INDEX `fk_fund_history_user1_idx` ON `sale`.`fund_history` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`spending_fund`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`spending_fund` ;

CREATE TABLE IF NOT EXISTS `sale`.`spending_fund` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `amount` FLOAT NOT NULL,
  `fund_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_spending_fund_fund1`
    FOREIGN KEY (`fund_id`)
    REFERENCES `sale`.`fund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_spending_fund_fund1_idx` ON `sale`.`spending_fund` (`fund_id` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`spending_fund` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`spending_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`spending_history` ;

CREATE TABLE IF NOT EXISTS `sale`.`spending_history` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  `update_date` DATETIME NOT NULL,
  `is_familly` BIT NOT NULL DEFAULT 0 COMMENT '1: for shop' /* comment truncated */ /*2: for familly*/,
  `description` VARCHAR(255) NULL,
  `spending_fund_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_spending_history_spending_fund1`
    FOREIGN KEY (`spending_fund_id`)
    REFERENCES `sale`.`spending_fund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_spending_history_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`spending_history` (`id` ASC);

CREATE INDEX `fk_spending_history_spending_fund1_idx` ON `sale`.`spending_history` (`spending_fund_id` ASC);

CREATE INDEX `fk_spending_history_user1_idx` ON `sale`.`spending_history` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`income_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`income_history` ;

CREATE TABLE IF NOT EXISTS `sale`.`income_history` (
  `income_code` VARCHAR(32) NOT NULL,
  `date` DATETIME NOT NULL,
  `income_date` DATE NOT NULL,
  `is_familly` BIT NOT NULL DEFAULT 0 COMMENT '1: for shop' /* comment truncated */ /*0: for familly*/,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`income_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sale`.`income_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`income_history` ;

CREATE TABLE IF NOT EXISTS `sale`.`income_history` (
  `income_code` VARCHAR(32) NOT NULL,
  `date` DATETIME NOT NULL,
  `income_date` DATE NOT NULL,
  `is_familly` BIT NOT NULL DEFAULT 0 COMMENT '1: for shop' /* comment truncated */ /*0: for familly*/,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`income_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sale`.`fund_exchange`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`fund_exchange` ;

CREATE TABLE IF NOT EXISTS `sale`.`fund_exchange` (
  `id` INT(11) NOT NULL,
  `amount` FLOAT NOT NULL,
  `ratio` FLOAT NOT NULL DEFAULT 1,
  `date` DATE NOT NULL,
  `update_date` DATETIME NOT NULL,
  `description` VARCHAR(255) NULL,
  `fund_id_source` INT(11) NOT NULL,
  `fund_id_destination` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_fund_exchange_fund1`
    FOREIGN KEY (`fund_id_source`)
    REFERENCES `sale`.`fund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fund_exchange_fund2`
    FOREIGN KEY (`fund_id_destination`)
    REFERENCES `sale`.`fund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fund_exchange_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`fund_exchange` (`id` ASC);

CREATE INDEX `fk_fund_exchange_fund1_idx` ON `sale`.`fund_exchange` (`fund_id_source` ASC);

CREATE INDEX `fk_fund_exchange_fund2_idx` ON `sale`.`fund_exchange` (`fund_id_destination` ASC);

CREATE INDEX `fk_fund_exchange_user1_idx` ON `sale`.`fund_exchange` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`customer_pay_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`customer_pay_history` ;

CREATE TABLE IF NOT EXISTS `sale`.`customer_pay_history` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `export_facture_id` INT(11) NOT NULL,
  `amount` FLOAT NOT NULL COMMENT 'lưu việc khách trả tiền' /* comment truncated */ /*hóa đơn
khách đặt tiền
trả lại tiền cho khách nếu khách chỉ trả lại hàng*/,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customer_pay_history_export_facture1`
    FOREIGN KEY (`export_facture_id`)
    REFERENCES `sale`.`export_facture` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_customer_pay_history_export_facture1_idx` ON `sale`.`customer_pay_history` (`export_facture_id` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`customer_pay_history` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`customer_bonus_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`customer_bonus_history` ;

CREATE TABLE IF NOT EXISTS `sale`.`customer_bonus_history` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT 'Lưu lịch sử sử dụng điểm thưởng của khách hàng',
  `point` FLOAT NOT NULL,
  `export_facture_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customer_bonus_history_export_facture1`
    FOREIGN KEY (`export_facture_id`)
    REFERENCES `sale`.`export_facture` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_customer_bonus_history_export_facture1_idx` ON `sale`.`customer_bonus_history` (`export_facture_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
