-- MySQL Script generated by MySQL Workbench
-- 10/02/16 22:42:51
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema sale
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sale` ;
CREATE SCHEMA IF NOT EXISTS `sale` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `sale` ;

-- -----------------------------------------------------
-- Table `sale`.`branch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`branch` ;

CREATE TABLE IF NOT EXISTS `sale`.`branch` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `address` VARCHAR(255) NULL,
  `create_date` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '<double-click to overwrite multiple objects>';


-- -----------------------------------------------------
-- Table `sale`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`role` ;

CREATE TABLE IF NOT EXISTS `sale`.`role` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '<double-click to overwrite multiple objects>';


-- -----------------------------------------------------
-- Table `sale`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`user` ;

CREATE TABLE IF NOT EXISTS `sale`.`user` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NULL,
  `firstname` VARCHAR(45) NULL,
  `lastname` VARCHAR(45) NULL,
  `address` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `is_active` BIT NOT NULL DEFAULT 1,
  `birth_day` DATE NULL,
  `create_date` DATETIME NULL,
  `branch_id` INT(11) NOT NULL,
  `role_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_user_branch1`
    FOREIGN KEY (`branch_id`)
    REFERENCES `sale`.`branch` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `sale`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '<double-click to overwrite multiple objects>';

CREATE INDEX `fk_user_branch1_idx` ON `sale`.`user` (`branch_id` ASC);

CREATE INDEX `fk_user_role1_idx` ON `sale`.`user` (`role_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`product` ;

CREATE TABLE IF NOT EXISTS `sale`.`product` (
  `product_code` VARCHAR(32) NOT NULL,
  `product_name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(1000) NULL,
  PRIMARY KEY (`product_code`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `product_code_UNIQUE` ON `sale`.`product` (`product_code` ASC);


-- -----------------------------------------------------
-- Table `sale`.`provider`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`provider` ;

CREATE TABLE IF NOT EXISTS `sale`.`provider` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `provider_name` VARCHAR(255) NOT NULL,
  `provider_phone` VARCHAR(16) NOT NULL,
  `provider_address` VARCHAR(255) NULL,
  `description` VARCHAR(1000) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`provider` (`id` ASC);

CREATE UNIQUE INDEX `phone_UNIQUE` ON `sale`.`provider` (`provider_phone` ASC);


-- -----------------------------------------------------
-- Table `sale`.`import_facture`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`import_facture` ;

CREATE TABLE IF NOT EXISTS `sale`.`import_facture` (
  `import_facture_code` VARCHAR(32) NOT NULL,
  `import_date` DATETIME NOT NULL,
  `description` VARCHAR(1000) NULL,
  `provider_id` INT NOT NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`import_facture_code`),
  CONSTRAINT `fk_import_facture_provider1`
    FOREIGN KEY (`provider_id`)
    REFERENCES `sale`.`provider` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_import_facture_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `import_facture_code_UNIQUE` ON `sale`.`import_facture` (`import_facture_code` ASC);

CREATE INDEX `fk_import_facture_provider1_idx` ON `sale`.`import_facture` (`provider_id` ASC);

CREATE INDEX `fk_import_facture_user1_idx` ON `sale`.`import_facture` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`import_facture_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`import_facture_product` ;

CREATE TABLE IF NOT EXISTS `sale`.`import_facture_product` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `import_price` FLOAT NOT NULL,
  `import_quantity` INT(11) NOT NULL,
  `import_facture_import_facture_code` VARCHAR(32) NOT NULL,
  `product_product_code` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_import_facture_product_import_facture1`
    FOREIGN KEY (`import_facture_import_facture_code`)
    REFERENCES `sale`.`import_facture` (`import_facture_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_import_facture_product_product1`
    FOREIGN KEY (`product_product_code`)
    REFERENCES `sale`.`product` (`product_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`import_facture_product` (`id` ASC);

CREATE INDEX `fk_import_facture_product_import_facture1_idx` ON `sale`.`import_facture_product` (`import_facture_import_facture_code` ASC);

CREATE INDEX `fk_import_facture_product_product1_idx` ON `sale`.`import_facture_product` (`product_product_code` ASC);


-- -----------------------------------------------------
-- Table `sale`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`customer` ;

CREATE TABLE IF NOT EXISTS `sale`.`customer` (
  `id` INT(11) NOT NULL,
  `customer_name` VARCHAR(255) NOT NULL,
  `customer_tel` VARCHAR(16) NULL,
  `customer_address` VARCHAR(255) NULL,
  `customer_email` VARCHAR(255) NULL,
  `customer_sex` BIT NOT NULL DEFAULT 0 COMMENT 'sex = 0 is WOMEN, 1 is MEN',
  `customer_birth_day` DATE NULL,
  `customer_description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`customer` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`return_provider_facture`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`return_provider_facture` ;

CREATE TABLE IF NOT EXISTS `sale`.`return_provider_facture` (
  `return_provider_facture_code` VARCHAR(32) NOT NULL,
  `return_provider_date` DATETIME NOT NULL,
  `description` VARCHAR(255) NULL,
  `provider_id` INT NOT NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`return_provider_facture_code`),
  CONSTRAINT `fk_return_provider_facture_provider1`
    FOREIGN KEY (`provider_id`)
    REFERENCES `sale`.`provider` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_return_provider_facture_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `return_provider_facture_code_UNIQUE` ON `sale`.`return_provider_facture` (`return_provider_facture_code` ASC);

CREATE INDEX `fk_return_provider_facture_provider1_idx` ON `sale`.`return_provider_facture` (`provider_id` ASC);

CREATE INDEX `fk_return_provider_facture_user1_idx` ON `sale`.`return_provider_facture` (`user_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`return_provider_facture_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`return_provider_facture_product` ;

CREATE TABLE IF NOT EXISTS `sale`.`return_provider_facture_product` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `return_provider_price` FLOAT NOT NULL,
  `return_provider_quantity` INT(11) NOT NULL,
  `return_provider_facture_return_provider_facture_code` VARCHAR(32) NOT NULL,
  `product_product_code` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_return_provider_facture_product_return_provider_facture1`
    FOREIGN KEY (`return_provider_facture_return_provider_facture_code`)
    REFERENCES `sale`.`return_provider_facture` (`return_provider_facture_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_return_provider_facture_product_product1`
    FOREIGN KEY (`product_product_code`)
    REFERENCES `sale`.`product` (`product_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`return_provider_facture_product` (`id` ASC);

CREATE INDEX `fk_return_provider_facture_product_return_provider_facture1_idx` ON `sale`.`return_provider_facture_product` (`return_provider_facture_return_provider_facture_code` ASC);

CREATE INDEX `fk_return_provider_facture_product_product1_idx` ON `sale`.`return_provider_facture_product` (`product_product_code` ASC);


-- -----------------------------------------------------
-- Table `sale`.`export_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`export_type` ;

CREATE TABLE IF NOT EXISTS `sale`.`export_type` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL COMMENT 'OFFLINE' /* comment truncated */ /*ONLINE
WHOLESALE
*/,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`export_type` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`export_facture`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`export_facture` ;

CREATE TABLE IF NOT EXISTS `sale`.`export_facture` (
  `export_facture_code` VARCHAR(32) NOT NULL,
  `export_facture_date` DATETIME NULL,
  `description` VARCHAR(255) NULL,
  `user_id` INT(11) NOT NULL,
  `customer_id` INT(11) NOT NULL,
  `export_type_id` INT(11) NOT NULL,
  PRIMARY KEY (`export_facture_code`),
  CONSTRAINT `fk_export_facture_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_export_facture_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `sale`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_export_facture_export_type1`
    FOREIGN KEY (`export_type_id`)
    REFERENCES `sale`.`export_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `export_facture_code_UNIQUE` ON `sale`.`export_facture` (`export_facture_code` ASC);

CREATE INDEX `fk_export_facture_user1_idx` ON `sale`.`export_facture` (`user_id` ASC);

CREATE INDEX `fk_export_facture_customer1_idx` ON `sale`.`export_facture` (`customer_id` ASC);

CREATE INDEX `fk_export_facture_export_type1_idx` ON `sale`.`export_facture` (`export_type_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`export_facture_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`export_facture_product` ;

CREATE TABLE IF NOT EXISTS `sale`.`export_facture_product` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `export_price` FLOAT NOT NULL,
  `export_quantity` INT NOT NULL,
  `product_id` INT(11) NOT NULL,
  `product_product_code` VARCHAR(32) NOT NULL,
  `export_facture_export_facture_code` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_export_facture_product_product1`
    FOREIGN KEY (`product_product_code`)
    REFERENCES `sale`.`product` (`product_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_export_facture_product_export_facture1`
    FOREIGN KEY (`export_facture_export_facture_code`)
    REFERENCES `sale`.`export_facture` (`export_facture_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`export_facture_product` (`id` ASC);

CREATE INDEX `fk_export_facture_product_product1_idx` ON `sale`.`export_facture_product` (`product_product_code` ASC);

CREATE INDEX `fk_export_facture_product_export_facture1_idx` ON `sale`.`export_facture_product` (`export_facture_export_facture_code` ASC);


-- -----------------------------------------------------
-- Table `sale`.`customer_return_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`customer_return_product` ;

CREATE TABLE IF NOT EXISTS `sale`.`customer_return_product` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `product_id` INT(11) NOT NULL,
  `customer_return_quantity` INT NOT NULL,
  `product_product_code` VARCHAR(32) NOT NULL,
  `export_facture_export_facture_code` VARCHAR(32) NOT NULL,
  `old_export_facture_export_facture_code` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customer_return_product_product1`
    FOREIGN KEY (`product_product_code`)
    REFERENCES `sale`.`product` (`product_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_return_product_export_facture1`
    FOREIGN KEY (`export_facture_export_facture_code`)
    REFERENCES `sale`.`export_facture` (`export_facture_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_return_product_export_facture_old`
    FOREIGN KEY (`old_export_facture_export_facture_code`)
    REFERENCES `sale`.`export_facture` (`export_facture_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`customer_return_product` (`id` ASC);

CREATE INDEX `fk_customer_return_product_product1_idx` ON `sale`.`customer_return_product` (`product_product_code` ASC);

CREATE INDEX `fk_customer_return_product_export_facture1_idx` ON `sale`.`customer_return_product` (`export_facture_export_facture_code` ASC);

CREATE INDEX `fk_customer_return_product_export_facture_old_idx` ON `sale`.`customer_return_product` (`old_export_facture_export_facture_code` ASC);


-- -----------------------------------------------------
-- Table `sale`.`fund`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`fund` ;

CREATE TABLE IF NOT EXISTS `sale`.`fund` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `fund_name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  `ratio` FLOAT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`fund` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`fund_history_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`fund_history_type` ;

CREATE TABLE IF NOT EXISTS `sale`.`fund_history_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`fund_history_type` (`id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`fund_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`fund_history` ;

CREATE TABLE IF NOT EXISTS `sale`.`fund_history` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL,
  `quantity` FLOAT NOT NULL,
  `ratio` FLOAT NOT NULL DEFAULT 1,
  `description` VARCHAR(1000) NOT NULL,
  `provider_id` INT(11) NULL COMMENT 'is not null if the payment is paied for provider',
  `is_for_shop` BIT NULL COMMENT '1: for shop' /* comment truncated */ /*0: for familly*/,
  `user_id` INT(11) NOT NULL,
  `fund_id` INT(11) NOT NULL,
  `fund_histoty_type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_fund_history_fund1`
    FOREIGN KEY (`fund_id`)
    REFERENCES `sale`.`fund` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fund_history_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `sale`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fund_history_fund_histoty_type1`
    FOREIGN KEY (`fund_histoty_type_id`)
    REFERENCES `sale`.`fund_history_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_fund_history_fund1_idx` ON `sale`.`fund_history` (`fund_id` ASC);

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`fund_history` (`id` ASC);

CREATE INDEX `fk_fund_history_user1_idx` ON `sale`.`fund_history` (`user_id` ASC);

CREATE INDEX `fk_fund_history_fund_histoty_type1_idx` ON `sale`.`fund_history` (`fund_histoty_type_id` ASC);


-- -----------------------------------------------------
-- Table `sale`.`spending`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sale`.`spending` ;

CREATE TABLE IF NOT EXISTS `sale`.`spending` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `amount` VARCHAR(45) NULL,
  `spendingcol` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `sale`.`spending` (`id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
